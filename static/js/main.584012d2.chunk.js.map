{"version":3,"sources":["logo.png","components/Upcoming.js","components/Live.js","components/Past.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Upcoming","props","state","allData","fetch","api_call","json","apidata","this","setState","data","tableData","tr","Object","keys","map","value","i","push","currentDate","Date","timestmp","parse","todate","getDate","getMonth","getFullYear","index","createdOn","createdDate","key","name","region","price","csv","className","id","role","aria-labelledby","onClick","changeData","renderTableData","React","Component","Live","console","log","Past","difference","days","Math","ceil","App","href","src","logo","alt","data-toggle","aria-controls","aria-selected","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.584012d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.66adda61.png\";","import React from \"react\";\r\n\r\nclass Upcoming extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allData: \"\"\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://rohitchaudhary701.github.io/bluestack/events.json\";\r\n    const api_call = await fetch(url);\r\n\r\n    const apidata = await api_call.json();\r\n    this.setState({ allData: apidata.data });\r\n  }\r\n\r\n  renderTableData() {\r\n    let tableData = this.state.allData;\r\n    let tr = [];\r\n    Object.keys(tableData).map(function (value, i) {\r\n      tr.push(tableData[value]);\r\n    });\r\n    var currentDate = new Date();\r\n    var timestmp = Date.parse(currentDate);\r\n    var todate = new Date(timestmp).getDate();\r\n    var tomonth = new Date(timestmp).getMonth() + 1;\r\n    var toyear = new Date(timestmp).getFullYear();\r\n    var currentDate = tomonth + '/' + todate + '/' + toyear;\r\n\r\n    var timestmp = Date.parse(currentDate);\r\n\r\n    return tr.map((value, index) => {\r\n      if (value.createdOn > timestmp) {\r\n        var todate = new Date(value.createdOn).getDate();\r\n        var tomonth = new Date(value.createdOn).getMonth() + 1;\r\n        var toyear = new Date(value.createdOn).getFullYear();\r\n        var createdDate = tomonth + '/' + todate + '/' + toyear;\r\n\r\n        return (\r\n          <tr key={index}>\r\n            <td>{createdDate}</td>\r\n            <td>{value.name}</td>\r\n            <td>{value.region}</td>\r\n            <td>{value.price}</td>\r\n            <td>{value.csv}</td>\r\n          </tr>\r\n        )\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div\r\n        className=\"tab-pane fade show active\"\r\n        id=\"upcoming\"\r\n        role=\"tabpanel\"\r\n        aria-labelledby=\"upcoming-tab\"\r\n        onClick={this.changeData}\r\n      >\r\n        Upcoming\r\n        <table className=\"table\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th>DATE</th>\r\n              <th>CAMPAIGN</th>\r\n              <th>VIEW</th>\r\n              <th>ACTIONS</th>\r\n              <th>CSV</th>\r\n              <th></th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.renderTableData()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upcoming;\r\n","import React from \"react\";\r\n\r\nclass Live extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allData: \"\"\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://rohitchaudhary701.github.io/bluestack/events.json\";\r\n    const api_call = await fetch(url);\r\n\r\n    const apidata = await api_call.json();\r\n    this.setState({ allData: apidata.data });\r\n  }\r\n\r\n  renderTableData() {\r\n    let tableData = this.state.allData;\r\n    let tr = [];\r\n    Object.keys(tableData).map(function (value, i) {\r\n      tr.push(tableData[value]);\r\n    });\r\n    var currentDate = new Date();\r\n    var timestmp = Date.parse(currentDate);\r\n    var todate = new Date(timestmp).getDate();\r\n    var tomonth = new Date(timestmp).getMonth() + 1;\r\n    var toyear = new Date(timestmp).getFullYear();\r\n    var currentDate = tomonth + '/' + todate + '/' + toyear;\r\n    console.log(currentDate);\r\n    var timestmp = Date.parse(currentDate);\r\n    console.log(timestmp);\r\n\r\n\r\n    return tr.map((value, index) => {\r\n      if (value.createdOn == timestmp) {\r\n        var todate = new Date(value.createdOn).getDate();\r\n        var tomonth = new Date(value.createdOn).getMonth() + 1;\r\n        var toyear = new Date(value.createdOn).getFullYear();\r\n        var createdDate = tomonth + '/' + todate + '/' + toyear;\r\n\r\n        return (\r\n          <tr key={index}>\r\n            <td>{createdDate}</td>\r\n            <td>{value.name}</td>\r\n            <td>{value.region}</td>\r\n            <td>{value.price}</td>\r\n            <td>{value.csv}</td>\r\n          </tr>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div\r\n        className=\"tab-pane fade\"\r\n        id=\"live\"\r\n        role=\"tabpanel\"\r\n        aria-labelledby=\"upcoming-tab\"\r\n        onClick={this.changeData}\r\n      >\r\n        Live\r\n        <table className=\"table\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th>DATE</th>\r\n              <th>CAMPAIGN</th>\r\n              <th>VIEW</th>\r\n              <th>ACTIONS</th>\r\n              <th>CSV</th>\r\n              <th></th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.renderTableData()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Live;\r\n","import React from \"react\";\r\n\r\nclass Past extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allData: \"\"\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const url = \"https://rohitchaudhary701.github.io/bluestack/events.json\";\r\n    const api_call = await fetch(url);\r\n    const apidata = await api_call.json();\r\n    this.setState({ allData: apidata.data });\r\n  }\r\n\r\n  renderTableData() {\r\n    let tableData = this.state.allData;\r\n    let tr = [];\r\n    Object.keys(tableData).map(function (value, i) {\r\n      tr.push(tableData[value]);\r\n    });\r\n    var currentDate = new Date();\r\n    var timestmp = Date.parse(currentDate);\r\n    var todate = new Date(timestmp).getDate();\r\n    var tomonth = new Date(timestmp).getMonth() + 1;\r\n    var toyear = new Date(timestmp).getFullYear();\r\n    var currentDate = tomonth + '/' + todate + '/' + toyear;\r\n    var timestmp = Date.parse(currentDate);\r\n\r\n    return tr.map((value, index) => {\r\n      if (value.createdOn < timestmp) {\r\n        var difference = timestmp - value.createdOn;\r\n        var days = Math.ceil(difference / 1000 / 60 / 60 / 24);\r\n        var todate = new Date(value.createdOn).getDate();\r\n        var tomonth = new Date(value.createdOn).getMonth() + 1;\r\n        var toyear = new Date(value.createdOn).getFullYear();\r\n        var createdDate = tomonth + '/' + todate + '/' + toyear;\r\n\r\n        return (\r\n          <tr key={index}>\r\n            <td>{createdDate} ({days} ago )</td>\r\n            <td>{value.name}</td>\r\n            <td>{value.region}</td>\r\n            <td>{value.price}</td>\r\n            <td>{value.csv}</td>\r\n          </tr>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"tab-pane fade \"\r\n        id=\"past\"\r\n        role=\"tabpanel\"\r\n        aria-labelledby=\"upcoming-tab\"\r\n        onClick={this.changeData}\r\n      >\r\n        Past\r\n        <table className=\"table\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th>DATE</th>\r\n              <th>CAMPAIGN</th>\r\n              <th>VIEW</th>\r\n              <th>ACTIONS</th>\r\n              <th>CSV</th>\r\n              <th></th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.renderTableData()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Past;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport logo from \"./logo.png\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport $ from \"jquery\";\nimport Upcoming from \"./components/Upcoming\";\nimport Live from \"./components/Live\";\nimport Past from \"./components/Past\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"container\">\n          <a className=\"logo\" href=\"/\">\n            <img src={logo} alt=\"logo\" />\n          </a>\n        </div>\n      </header>\n      <div className=\"container\">\n        <h2 className=\"main-heading\">Manage Campaigns</h2>\n        <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link active\"\n              id=\"upcoming-tab\"\n              data-toggle=\"tab\"\n              href=\"#upcoming\"\n              role=\"tab\"\n              aria-controls=\"upcoming\"\n              aria-selected=\"true\"\n            >\n              Upcoming Campaigns\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              id=\"live-tab\"\n              data-toggle=\"tab\"\n              href=\"#live\"\n              role=\"tab\"\n              aria-controls=\"live\"\n              aria-selected=\"false\"\n            >\n              Live\n            </a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              id=\"contact-tab\"\n              data-toggle=\"tab\"\n              href=\"#past\"\n              role=\"tab\"\n              aria-controls=\"contact\"\n              aria-selected=\"false\"\n            >\n              Past Campaigns\n            </a>\n          </li>\n        </ul>\n        <div className=\"tab-content\" id=\"myTabContent\">\n          <Upcoming />\n          <Live />\n          <Past />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}